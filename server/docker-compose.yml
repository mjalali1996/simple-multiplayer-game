version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres:12.2-alpine
    environment:
      - POSTGRES_DB=nakama
      - POSTGRES_PASSWORD=localdb
    volumes:
      - data:/var/lib/postgresql/data
    expose:
      - "8080"
      - "5432"
    ports:
      - "5432:5432"
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "nakama" ]
      interval: 3s
      timeout: 3s
      retries: 5
  plugin-compiler:
    container_name: plugin-compiler
    image: heroiclabs/nakama-pluginbuilder:3.32.0
    command: build -buildvcs=false -buildmode=plugin -trimpath -o ./data/modules/backend.so
    volumes:
      - ./:/builder
  nakama:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nakama
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
        cd /nakama-files &&
        ./nakama migrate up --database.address postgres:localdb@postgres:5432/nakama &&
        ./nakama --config ./config.yml
    restart: always
#    network_mode: host
    ports:
      - "4000-4050:4000-4050/udp"
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    depends_on:
      plugin-compiler:
        condition: service_completed_successfully
      postgres:
        condition: service_started
    volumes:
      - ./data:/nakama-files/data
      - ./config.yml:/nakama-files/config.yml
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7350/" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  data: